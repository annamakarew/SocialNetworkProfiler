{"ast":null,"code":"var _jsxFileName = \"/Users/annamakarewicz/Desktop/CS/SocialNetworkProfiler/search-and-rescue-dashboard/src/components/SentimentAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SentimentTrend = () => {\n  _s();\n  const [trendData, setTrendData] = useState([]);\n  useEffect(() => {\n    axios.get('/api/sentiment-trend').then(response => setTrendData(response.data)).catch(error => console.error('Error fetching sentiment trend:', error));\n  }, []);\n\n  // Helper function to generate the points for the line chart\n  const generatePoints = (data, width, height) => {\n    if (data.length === 0) return '';\n    const maxScore = Math.max(...data.map(entry => entry.score));\n    const minScore = Math.min(...data.map(entry => entry.score));\n    const pointSpacing = width / (data.length - 1);\n    return data.map((entry, index) => {\n      const x = index * pointSpacing;\n      const y = height - (entry.score - minScore) / (maxScore - minScore) * height;\n      return `${x},${y}`;\n    }).join(' ');\n  };\n  const width = 600;\n  const height = 300;\n  const points = generatePoints(trendData, width, height);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sentiment-trend\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sentiment Trend Over Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: width,\n      height: height,\n      style: {\n        border: '1px solid #ddd'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n        fill: \"none\",\n        stroke: \"blue\",\n        strokeWidth: \"2\",\n        points: points\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), trendData.map((entry, index) => {\n        const pointSpacing = width / (trendData.length - 1);\n        const x = index * pointSpacing;\n        const y = height - (entry.score - Math.min(...trendData.map(d => d.score))) / (Math.max(...trendData.map(d => d.score)) - Math.min(...trendData.map(d => d.score))) * height;\n        return /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: x,\n          cy: y,\n          r: \"3\",\n          fill: \"blue\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(SentimentTrend, \"KQ6l5jCiTVVEOk3wAbMuo2L58sI=\");\n_c = SentimentTrend;\nexport default SentimentTrend;\nvar _c;\n$RefreshReg$(_c, \"SentimentTrend\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","SentimentTrend","_s","trendData","setTrendData","get","then","response","data","catch","error","console","generatePoints","width","height","length","maxScore","Math","max","map","entry","score","minScore","min","pointSpacing","index","x","y","join","points","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","border","fill","stroke","strokeWidth","d","cx","cy","r","_c","$RefreshReg$"],"sources":["/Users/annamakarewicz/Desktop/CS/SocialNetworkProfiler/search-and-rescue-dashboard/src/components/SentimentAnalysis.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst SentimentTrend = () => {\n  const [trendData, setTrendData] = useState([]);\n\n  useEffect(() => {\n    axios.get('/api/sentiment-trend')\n      .then(response => setTrendData(response.data))\n      .catch(error => console.error('Error fetching sentiment trend:', error));\n  }, []);\n\n  // Helper function to generate the points for the line chart\n  const generatePoints = (data, width, height) => {\n    if (data.length === 0) return '';\n    const maxScore = Math.max(...data.map(entry => entry.score));\n    const minScore = Math.min(...data.map(entry => entry.score));\n    const pointSpacing = width / (data.length - 1);\n\n    return data.map((entry, index) => {\n      const x = index * pointSpacing;\n      const y = height - ((entry.score - minScore) / (maxScore - minScore)) * height;\n      return `${x},${y}`;\n    }).join(' ');\n  };\n\n  const width = 600;\n  const height = 300;\n  const points = generatePoints(trendData, width, height);\n\n  return (\n    <div className=\"sentiment-trend\">\n      <h2>Sentiment Trend Over Time</h2>\n      <svg width={width} height={height} style={{ border: '1px solid #ddd' }}>\n        <polyline\n          fill=\"none\"\n          stroke=\"blue\"\n          strokeWidth=\"2\"\n          points={points}\n        />\n        {/* Add circles at each point for better visualization */}\n        {trendData.map((entry, index) => {\n          const pointSpacing = width / (trendData.length - 1);\n          const x = index * pointSpacing;\n          const y = height - ((entry.score - Math.min(...trendData.map(d => d.score))) / \n              (Math.max(...trendData.map(d => d.score)) - Math.min(...trendData.map(d => d.score)))) * height;\n          return (\n            <circle key={index} cx={x} cy={y} r=\"3\" fill=\"blue\" />\n          );\n        })}\n      </svg>\n    </div>\n  );\n};\n\nexport default SentimentTrend;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}